"use strict";(self.webpackChunkrust_tutorial=self.webpackChunkrust_tutorial||[]).push([[849],{9030:(t,e,l)=>{l.r(e),l.d(e,{assets:()=>u,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=l(7462),s=(l(7294),l(3905)),o=l(814);const i={title:"Hello world"},n=void 0,a={unversionedId:"basics/hello-world",id:"basics/hello-world",title:"Hello world",description:'We will follow the customary first program "hello world".',source:"@site/docs/basics/01-hello-world.mdx",sourceDirName:"basics",slug:"/basics/hello-world",permalink:"/rust/basics/hello-world",draft:!1,editUrl:"https://github.com/pranabdas/rust/blob/main/docs/basics/01-hello-world.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Hello world"},sidebar:"docs",previous:{title:"Basics",permalink:"/rust/category/basics"},next:{title:"Variables",permalink:"/rust/basics/variables"}},u={},c=[],d={toc:c};function p(t){let{components:e,...l}=t;return(0,s.kt)("wrapper",(0,r.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,'We will follow the customary first program "hello world".'),(0,s.kt)(o.Z,{language:"rust",title:"src/01-hello-world/main.rs",showLineNumbers:!0,mdxType:"CodeBlock"},'use std::io::{self, Write}; // require for flushing tty\n\nfn main() {\n    // the exclamation mark indicates println is a macro\n    // use println wherever possible\n    println!("Hello, rust!");\n\n    // print without new line\n    print!("Happy ");\n    io::stdout().flush().unwrap();\n    println!("learning!");\n}\n'))}p.isMDXComponent=!0}}]);